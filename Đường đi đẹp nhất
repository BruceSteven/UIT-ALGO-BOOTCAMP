#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;


vector<int> adj[1 << 20];
vector<int> path;
bool vis[1 << 20];
bool dfs(int i, int t)
{
    if (i == t)
    {
        path.push_back(i);
        return true;
    }
    vis[i] = true;
    for (int j : adj[i])
        if (!vis[j] && dfs(j, t))
        {
            path.push_back(i);
            return true;
        }
    return false;
}

int main()
{
    int n, m, s, t;
    cin >> n >> m >> s >> t;
    while (m--)
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
    }
    for (int i = 1; i <= n; ++i) sort(adj[i].begin(), adj[i].end());
    dfs(s, t);
    for (int i = path.size() - 1; i >= 0; --i)
        cout << path[i] << ' ';
    return 0;
}
